create table inbox_raw
(
    id        varchar(255) not null primary key,
    message   text,
    processed boolean,
    user_id   varchar(255)
);

create table users
(
    id            varchar(255) not null primary key,
    email         varchar(255),
    password      varchar(255),
    private_key   text,
    public_key    text,
    roles         varchar(255),
    summary       text,
    one_time_code text,
    username      varchar(255),
    first_name    varchar(255),
    last_name     varchar(255)
);

create table strava_user
(
    id             integer not null primary key,
    country        varchar(255),
    firstname      varchar(255),
    lastname       varchar(255),
    profile_medium varchar(255),
    token          varchar(255),
    user_id        varchar(255)
        constraint fk5wldwtvn1falgtx9fxxv6tvan references users
);

create table activity
(
    id                   bigint not null primary key,
    description          varchar(255),
    name                 varchar(255),
    start_date           timestamp,
    timezone             varchar(255),
    type                 varchar(255),
    map_image            oid,
    distance             double precision,
    moving_time          INTEGER,
    elapsed_time         INTEGER,
    activity_type        varchar(255),
    total_elevation_gain double precision,
    user_id              varchar(255)
        constraint fkabldwtcfgfalgtx9fxxv6tvwe references users
);

create table activity_data
(
    id          bigint generated by default as identity primary key,
    altitude    double precision,
    distance    double precision,
    lat         double precision,
    lng         double precision,
    time        double precision,
    activity_id bigint
        constraint fkd7f498bife05fnbg2j63prufi references activity
);

CREATE TABLE activity_comment
(
    id          VARCHAR(255) PRIMARY KEY,
    message     text,
    from_user   VARCHAR(255),
    created_at  TIMESTAMP,
    in_reply_to VARCHAR(255)
);

CREATE TABLE follower
(
    id       VARCHAR(255) PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    server   VARCHAR(255) NOT NULL,
    users_id VARCHAR(255)
        constraint fkedsdfsdbife04fnbg1r63hjfg references users
);

CREATE TABLE following
(
    id       VARCHAR(255) PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    server   VARCHAR(255) NOT NULL,
    users_id VARCHAR(255)
        constraint fk12dfsdbi2334fnbg1r63hjf1 references users
);


CREATE TABLE public_key
(
    id             VARCHAR(255) PRIMARY KEY,
    owner          VARCHAR(255) NOT NULL,
    public_key_pem TEXT         NOT NULL
);

CREATE TABLE actor
(
    id                 VARCHAR(255) PRIMARY KEY,
    type               VARCHAR(255) NOT NULL,
    preferred_username VARCHAR(255) NOT NULL,
    name               VARCHAR(255) NOT NULL,
    summary            VARCHAR(255) NOT NULL,
    inbox              VARCHAR(255) NOT NULL,
    outbox             VARCHAR(255) NOT NULL,
    public_key_id      VARCHAR(255) NOT NULL,
    FOREIGN KEY (public_key_id) REFERENCES public_key (id)
);

CREATE TABLE actor_icon
(
    actor_id VARCHAR(255) NOT NULL,
    icon     VARCHAR(255) NOT NULL,
    PRIMARY KEY (actor_id, icon),
    FOREIGN KEY (actor_id) REFERENCES actor (id)
);

CREATE TABLE activity_pub_message
(
    id                   VARCHAR(255)             NOT NULL,
    type                 VARCHAR(50)              NOT NULL,
    summary              VARCHAR(255),
    in_reply_to_id       VARCHAR(255),
    published            TIMESTAMP WITH TIME ZONE NOT NULL,
    url                  VARCHAR(255)             NOT NULL,
    attributed_to_id     VARCHAR(255)             NOT NULL,
    sensitive            BOOLEAN                  NOT NULL,
    content              TEXT                     NOT NULL,
    is_sport             BOOLEAN                  NOT NULL,
    sport_type           VARCHAR(50),
    start_date           TIMESTAMP WITH TIME ZONE,
    timezone             VARCHAR(50),
    distance             DOUBLE PRECISION,
    moving_time          INTEGER,
    elapsed_time         INTEGER,
    total_elevation_gain DOUBLE PRECISION,
    PRIMARY KEY (id),
    FOREIGN KEY (in_reply_to_id) REFERENCES activity_pub_message (id) ON DELETE SET NULL,
    FOREIGN KEY (attributed_to_id) REFERENCES actor (id) ON DELETE SET NULL
);

CREATE TABLE media
(
    id         VARCHAR(255) NOT NULL,
    type       VARCHAR(50)  NOT NULL,
    media_type VARCHAR(255) NOT NULL,
    url        VARCHAR(255) NOT NULL,
    name       VARCHAR(255),
    blurhash   VARCHAR(255) NOT NULL,
    width      INTEGER      NOT NULL,
    height     INTEGER      NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE activity_pub_message_attachment
(
    activity_pub_message_id VARCHAR(255) NOT NULL,
    attachment_id           VARCHAR(255) NOT NULL,
    PRIMARY KEY (activity_pub_message_id, attachment_id),
    FOREIGN KEY (activity_pub_message_id) REFERENCES activity_pub_message (id) ON DELETE CASCADE,
    FOREIGN KEY (attachment_id) REFERENCES media (id) ON DELETE CASCADE
);

CREATE TABLE user_activity_pub_message
(
    id                      VARCHAR(255) PRIMARY KEY,
    user_id                 VARCHAR(255) NOT NULL,
    activity_pub_message_id VARCHAR(255) NOT NULL,
    date                    TIMESTAMP    NOT NULL,
    is_notified             BOOLEAN      NOT NULL DEFAULT false,
    FOREIGN KEY (user_id) REFERENCES users (id),
    FOREIGN KEY (activity_pub_message_id) REFERENCES activity_pub_message (id)
);
